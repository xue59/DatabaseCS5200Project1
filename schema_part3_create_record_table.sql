DROP TABLE IF EXISTS record_table;
CREATE TABLE IF NOT EXISTS record_table 
    (record_id Int,
	remarks text,
    airport_info_id Int NOT NULL,
    airline_info_id Int NOT NULL,
    aircraft_info_id Int NOT NULL,
    phase_situation_id Int NOT NULL,
    consequence_id Int NOT NULL,
    wildlife_size_id Int NOT NULL,
    conditions_precipitation_id Int NOT NULL,
    conditions_sky_id Int NOT NULL,
    action_id Int NOT NULL,
    flight_date varchar(50),
    wildlife_species_id Int NOT NULL,
    feet_above_ground Int DEFAULT -1,
    wildlife_number_struck_actual Int DEFAULT -1,
    number_of_people_inquired Int DEFAULT -1,
    aircraft_number_of_engines Int DEFAULT -1,
    cost_total text,
    pilot_warned_of_birds_or_wildlife text,
    PRIMARY KEY (record_id),
    FOREIGN KEY (airport_info_id) REFERENCES airport_info(airport_info_id),
    FOREIGN KEY (airline_info_id) REFERENCES airline_info(airline_id),
    FOREIGN KEY (aircraft_info_id) REFERENCES aircraft_info(aircraft_info_id),
    FOREIGN KEY (phase_situation_id) REFERENCES phase_situation(phase_id),    
    FOREIGN KEY (consequence_id) REFERENCES consequence(consequence_id),
    FOREIGN KEY (wildlife_size_id) REFERENCES wild_size_record(wildlife_size_id),
    FOREIGN KEY (conditions_precipitation_id) REFERENCES conditions_precipitation_type(conditions_precipitation_id),
    FOREIGN KEY (conditions_sky_id) REFERENCES conditions_of_sky(conditions_sky_id),
    FOREIGN KEY (action_id) REFERENCES action_done(action_id),
    FOREIGN KEY (flight_date) REFERENCES flight_date_table(flight_date),
    FOREIGN KEY (wildlife_species_id) REFERENCES wildlife_species(wildlife_species_id),
    FOREIGN KEY (feet_above_ground) REFERENCES altitude_situation(feet_above_ground),
    FOREIGN KEY (wildlife_number_struck_actual) REFERENCES wildlife_count(wildlife_number_struck_actual)
);
